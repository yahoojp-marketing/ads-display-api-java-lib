/*
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v16/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div> 
 *
 * The version of the OpenAPI document: v16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.yahoo.adsdisplayapi.v16.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import jp.co.yahoo.adsdisplayapi.v16.model.FeedDataServiceEncoding;
import jp.co.yahoo.adsdisplayapi.v16.model.FeedDataServiceOutput;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * &lt;div lang&#x3D;\&quot;ja\&quot;&gt;商品情報のエラーファイルダウンロード処理を実施します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;FeedDataServiceDownloadErrorFileSelector object retains search condition of downloadErrorFile operation.&lt;/div&gt; 
 */
@JsonPropertyOrder({
  FeedDataServiceDownloadErrorFileSelector.JSON_PROPERTY_ACCOUNT_ID,
  FeedDataServiceDownloadErrorFileSelector.JSON_PROPERTY_ITEM_LIST_UPLOAD_ID,
  FeedDataServiceDownloadErrorFileSelector.JSON_PROPERTY_ENCODING,
  FeedDataServiceDownloadErrorFileSelector.JSON_PROPERTY_OUTPUT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FeedDataServiceDownloadErrorFileSelector {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private Long accountId;

  public static final String JSON_PROPERTY_ITEM_LIST_UPLOAD_ID = "itemListUploadId";
  private Long itemListUploadId;

  public static final String JSON_PROPERTY_ENCODING = "encoding";
  private FeedDataServiceEncoding encoding;

  public static final String JSON_PROPERTY_OUTPUT = "output";
  private FeedDataServiceOutput output;

  public FeedDataServiceDownloadErrorFileSelector() {
  }

  public FeedDataServiceDownloadErrorFileSelector accountId(Long accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * &lt;div lang&#x3D;\&quot;ja\&quot;&gt;検索条件：アカウントIDです。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;Search condition: Account ID.&lt;/div&gt; 
   * @return accountId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }


  public FeedDataServiceDownloadErrorFileSelector itemListUploadId(Long itemListUploadId) {
    
    this.itemListUploadId = itemListUploadId;
    return this;
  }

   /**
   * &lt;div lang&#x3D;\&quot;ja\&quot;&gt;検索条件：アップロードした商品情報を識別するID&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;Search condition: Uploaded item list ID.&lt;/div&gt; 
   * @return itemListUploadId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITEM_LIST_UPLOAD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getItemListUploadId() {
    return itemListUploadId;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_LIST_UPLOAD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setItemListUploadId(Long itemListUploadId) {
    this.itemListUploadId = itemListUploadId;
  }


  public FeedDataServiceDownloadErrorFileSelector encoding(FeedDataServiceEncoding encoding) {
    
    this.encoding = encoding;
    return this;
  }

   /**
   * Get encoding
   * @return encoding
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FeedDataServiceEncoding getEncoding() {
    return encoding;
  }


  @JsonProperty(JSON_PROPERTY_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncoding(FeedDataServiceEncoding encoding) {
    this.encoding = encoding;
  }


  public FeedDataServiceDownloadErrorFileSelector output(FeedDataServiceOutput output) {
    
    this.output = output;
    return this;
  }

   /**
   * Get output
   * @return output
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FeedDataServiceOutput getOutput() {
    return output;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutput(FeedDataServiceOutput output) {
    this.output = output;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedDataServiceDownloadErrorFileSelector feedDataServiceDownloadErrorFileSelector = (FeedDataServiceDownloadErrorFileSelector) o;
    return Objects.equals(this.accountId, feedDataServiceDownloadErrorFileSelector.accountId) &&
        Objects.equals(this.itemListUploadId, feedDataServiceDownloadErrorFileSelector.itemListUploadId) &&
        Objects.equals(this.encoding, feedDataServiceDownloadErrorFileSelector.encoding) &&
        Objects.equals(this.output, feedDataServiceDownloadErrorFileSelector.output);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, itemListUploadId, encoding, output);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedDataServiceDownloadErrorFileSelector {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    itemListUploadId: ").append(toIndentedString(itemListUploadId)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

