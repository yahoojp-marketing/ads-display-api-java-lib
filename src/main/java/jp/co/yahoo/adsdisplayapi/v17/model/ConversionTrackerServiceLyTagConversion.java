/*
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v17/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div> 
 *
 * The version of the OpenAPI document: v17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.yahoo.adsdisplayapi.v17.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import jp.co.yahoo.adsdisplayapi.v17.model.ConversionTrackerServiceLyTagConversionRuleType;
import jp.co.yahoo.adsdisplayapi.v17.model.ConversionTrackerServiceLyTagConversionUrlRule;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * &lt;div lang&#x3D;\&quot;ja\&quot;&gt; このフィールドは、計測タグのコンバージョン設定を表します。&lt;br&gt; ADDおよびSET時は省略可能となります。ADD時、conversionTrackerTypeがLY_TAG_CONVERSIONの場合、必須です。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; This field describes the information for the tracking tag.&lt;br&gt; This field is optional in ADD and SET operation. If conversionTrackerType is LY_TAG_CONVERSION, this field is required in ADD operation. &lt;/div&gt; 
 */
@ApiModel(description = "<div lang=\"ja\"> このフィールドは、計測タグのコンバージョン設定を表します。<br> ADDおよびSET時は省略可能となります。ADD時、conversionTrackerTypeがLY_TAG_CONVERSIONの場合、必須です。 </div> <div lang=\"en\"> This field describes the information for the tracking tag.<br> This field is optional in ADD and SET operation. If conversionTrackerType is LY_TAG_CONVERSION, this field is required in ADD operation. </div> ")
@JsonPropertyOrder({
  ConversionTrackerServiceLyTagConversion.JSON_PROPERTY_SNIPPET_ID,
  ConversionTrackerServiceLyTagConversion.JSON_PROPERTY_RULE_TYPE,
  ConversionTrackerServiceLyTagConversion.JSON_PROPERTY_URL_RULE
})
@JsonTypeName("ConversionTrackerServiceLyTagConversion")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConversionTrackerServiceLyTagConversion {
  public static final String JSON_PROPERTY_SNIPPET_ID = "snippetId";
  private String snippetId;

  public static final String JSON_PROPERTY_RULE_TYPE = "ruleType";
  private ConversionTrackerServiceLyTagConversionRuleType ruleType;

  public static final String JSON_PROPERTY_URL_RULE = "urlRule";
  private ConversionTrackerServiceLyTagConversionUrlRule urlRule;

  public ConversionTrackerServiceLyTagConversion() { 
  }

  public ConversionTrackerServiceLyTagConversion snippetId(String snippetId) {
    
    this.snippetId = snippetId;
    return this;
  }

   /**
   * &lt;div lang&#x3D;\&quot;ja\&quot;&gt; スニペットIDです。&lt;br&gt; このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; Snippet ID.&lt;br&gt; Although this field will be returned in the response, it will be ignored on input. &lt;/div&gt; 
   * @return snippetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "<div lang=\"ja\"> スニペットIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Snippet ID.<br> Although this field will be returned in the response, it will be ignored on input. </div> ")
  @JsonProperty(JSON_PROPERTY_SNIPPET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSnippetId() {
    return snippetId;
  }


  @JsonProperty(JSON_PROPERTY_SNIPPET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnippetId(String snippetId) {
    this.snippetId = snippetId;
  }


  public ConversionTrackerServiceLyTagConversion ruleType(ConversionTrackerServiceLyTagConversionRuleType ruleType) {
    
    this.ruleType = ruleType;
    return this;
  }

   /**
   * Get ruleType
   * @return ruleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConversionTrackerServiceLyTagConversionRuleType getRuleType() {
    return ruleType;
  }


  @JsonProperty(JSON_PROPERTY_RULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleType(ConversionTrackerServiceLyTagConversionRuleType ruleType) {
    this.ruleType = ruleType;
  }


  public ConversionTrackerServiceLyTagConversion urlRule(ConversionTrackerServiceLyTagConversionUrlRule urlRule) {
    
    this.urlRule = urlRule;
    return this;
  }

   /**
   * Get urlRule
   * @return urlRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConversionTrackerServiceLyTagConversionUrlRule getUrlRule() {
    return urlRule;
  }


  @JsonProperty(JSON_PROPERTY_URL_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrlRule(ConversionTrackerServiceLyTagConversionUrlRule urlRule) {
    this.urlRule = urlRule;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversionTrackerServiceLyTagConversion conversionTrackerServiceLyTagConversion = (ConversionTrackerServiceLyTagConversion) o;
    return Objects.equals(this.snippetId, conversionTrackerServiceLyTagConversion.snippetId) &&
        Objects.equals(this.ruleType, conversionTrackerServiceLyTagConversion.ruleType) &&
        Objects.equals(this.urlRule, conversionTrackerServiceLyTagConversion.urlRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(snippetId, ruleType, urlRule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversionTrackerServiceLyTagConversion {\n");
    sb.append("    snippetId: ").append(toIndentedString(snippetId)).append("\n");
    sb.append("    ruleType: ").append(toIndentedString(ruleType)).append("\n");
    sb.append("    urlRule: ").append(toIndentedString(urlRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

