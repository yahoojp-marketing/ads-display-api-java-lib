/*
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v17/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div> 
 *
 * The version of the OpenAPI document: v17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.yahoo.adsdisplayapi.v17.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * &lt;div lang&#x3D;\&quot;ja\&quot;&gt;EstimatedUserSizeServiceSelectorオブジェクトは、ユーザサイズを推定したいキーワードもしくはURLを指定します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;The EstimatedUserSizeServiceSelector object is used to specify the keywords or urls for which you want to estimate user size.&lt;/div&gt; 
 */
@ApiModel(description = "<div lang=\"ja\">EstimatedUserSizeServiceSelectorオブジェクトは、ユーザサイズを推定したいキーワードもしくはURLを指定します。</div> <div lang=\"en\">The EstimatedUserSizeServiceSelector object is used to specify the keywords or urls for which you want to estimate user size.</div> ")
@JsonPropertyOrder({
  EstimatedUserSizeServiceSelector.JSON_PROPERTY_KEYWORDS,
  EstimatedUserSizeServiceSelector.JSON_PROPERTY_URLS
})
@JsonTypeName("EstimatedUserSizeServiceSelector")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EstimatedUserSizeServiceSelector {
  public static final String JSON_PROPERTY_KEYWORDS = "keywords";
  private List<String> keywords = null;

  public static final String JSON_PROPERTY_URLS = "urls";
  private List<String> urls = null;

  public EstimatedUserSizeServiceSelector() { 
  }

  public EstimatedUserSizeServiceSelector keywords(List<String> keywords) {
    
    this.keywords = keywords;
    return this;
  }

  public EstimatedUserSizeServiceSelector addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * &lt;div lang&#x3D;\&quot;ja\&quot;&gt; ユーザサイズを推定するキーワードです。&lt;br&gt; urlsを指定する場合、このフィールドは指定できません。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; Keywords to estimate user size.&lt;br&gt; *If urls is specified, this field cannot be specified in ADD and SET operation. &lt;/div&gt; 
   * @return keywords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "<div lang=\"ja\"> ユーザサイズを推定するキーワードです。<br> urlsを指定する場合、このフィールドは指定できません。 </div> <div lang=\"en\"> Keywords to estimate user size.<br> *If urls is specified, this field cannot be specified in ADD and SET operation. </div> ")
  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getKeywords() {
    return keywords;
  }


  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }


  public EstimatedUserSizeServiceSelector urls(List<String> urls) {
    
    this.urls = urls;
    return this;
  }

  public EstimatedUserSizeServiceSelector addUrlsItem(String urlsItem) {
    if (this.urls == null) {
      this.urls = new ArrayList<>();
    }
    this.urls.add(urlsItem);
    return this;
  }

   /**
   * &lt;div lang&#x3D;\&quot;ja\&quot;&gt; ユーザサイズを推定するURLです。&lt;br&gt; keywordsを指定する場合、このフィールドは指定できません。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; Urls to estimate user size.&lt;br&gt; *If keywords is specified, this field cannot be specified in ADD and SET operation. &lt;/div&gt; 
   * @return urls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "<div lang=\"ja\"> ユーザサイズを推定するURLです。<br> keywordsを指定する場合、このフィールドは指定できません。 </div> <div lang=\"en\"> Urls to estimate user size.<br> *If keywords is specified, this field cannot be specified in ADD and SET operation. </div> ")
  @JsonProperty(JSON_PROPERTY_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUrls() {
    return urls;
  }


  @JsonProperty(JSON_PROPERTY_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrls(List<String> urls) {
    this.urls = urls;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimatedUserSizeServiceSelector estimatedUserSizeServiceSelector = (EstimatedUserSizeServiceSelector) o;
    return Objects.equals(this.keywords, estimatedUserSizeServiceSelector.keywords) &&
        Objects.equals(this.urls, estimatedUserSizeServiceSelector.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keywords, urls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimatedUserSizeServiceSelector {\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

